# Makefile template for autoconf builds using mkmf
#
# Compiler flags are configured by autoconf's configure script.
#
# Source code dependencies are configured by mkmf and list_paths, specified in
# the `Makefile.mkmf` file.
#
# mkmf conventions are close, but not identical, to autoconf.  We attempt to
# map the autoconf variables to the mkmf variables.
#
# The following variables are used by Makefiles generated by mkmf.
#
#   CC      C compiler
#   CXX     C++ compiler
#   FC      Fortran compiler (f77 and f90)
#   LD      Linker
#   AR      Archiver
#
#   CPPDEFS     Preprocessor macros
#   CPPFLAGS    C preprocessing flags
#   CXXFLAGS    C++ preprocessing flags
#   FPPFLAGS    Fortran preprocessing flags
#
#   CFLAGS      C compiler flags
#   FFLAGS      Fortran compiler flags
#   LDFLAGS     Linker flags + libraries
#   ARFLAGS     Archiver flags
#
#   OTHERFLAGS      Additional flags for all languages (C, C++, Fortran)
#   OTHER_CFLAGS    Optional C flags
#   OTHER_CXXFLAGS  Optional C++ flags
#   OTHER_FFLAGS    Optional Fortran flags
#   TMPFILES        Placeholder for `make clean` deletion (as `make neat`).
#
#
#   NOTES:
#    - FPPFLAGS and FFLAGS always appear as a pair, and autoconf does not use
#      FPPFLAGS, so FPPFLAGS does not serve much purpose.
#
#    - mkmf's FFLAGS does not distinguish between autoconf's fixed-format
#      FFLAGS and free-format FCFLAGS.
#
#    - LDFLAGS does not distinguish between autoconf's LDFLAGS and LIBS.
#      It also places both after the executable rather than just LIBS.

CC = @CC@
FC = @FC@
LD = @FC@
AR = @AR@

CPPDEFS = @DEFS@
CPPFLAGS = @CPPFLAGS@
FFLAGS = @FCFLAGS@
LDFLAGS = @LDFLAGS@
ARFLAGS = @ARFLAGS@

# Gather modulefiles
TMPFILES = $(wildcard *.mod)

include Makefile.mkmf
